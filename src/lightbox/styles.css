[data-tinylight-overlay] {
  --overlay-bg: rgba(0, 0, 0, 0.25);
  --overlay-blur: 5px;

  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    backdrop-filter: blur(var(--overlay-blur));
    background-color: var(--overlay-bg);
    z-index: 0;
  }
}

[data-tinylight-title],
[data-tinylight-description] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

[data-tinylight-content] {
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1000;
}

[data-tinylight-items] {
  display: flex;
  align-items: center;
  gap: 3rem;
  position: relative;
  scroll-snap-type: x mandatory;
  overflow-x: scroll;
  overflow-y: hidden;
  overscroll-behavior-x: contain;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
  scroll-behavior: smooth;

  @media screen and (max-width: 768px) {
    gap: 1rem;
  }

  &::-webkit-scrollbar {
    display: none;
  }
}

[data-tinylight-item] {
  position: relative;
  flex: 0 0 100%;
  display: flex;
  scroll-snap-align: start;
  max-height: 80vh;
  height: 100%;
  justify-content: center;

  & > * {
    max-width: 100%;
    height: auto;
  }

  &:where([data-tinylight-active-item="true"]) {
    scroll-snap-align: center;
    scroll-snap-stop: always;
  }
}

[data-tinylight-thumbs] {
  display: flex;
  flex-wrap: nowrap;
  flex: 1;
  gap: 0.5rem;
  margin: 0 auto;
  cursor: pointer;
  position: relative;
  bottom: 0;
  width: 100%;
  padding: 20px 0px;
  flex: 0 0 100%;
  max-width: 90%;
  scroll-snap-type: x mandatory;
  overflow-x: scroll;
  overflow-y: auto;
  scroll-behavior: smooth;
  overscroll-behavior-x: contain;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
  scrollbar-width: none;

  @media screen and (min-width: 768px) {
    max-width: 50%;
  }
}

[data-tinylight-trigger] {
  height: auto;
  padding: 0;
  & > * {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
}

[data-tinylight-thumb] {
  height: auto;
  flex: 0 0 100px;
  aspect-ratio: 3 / 2;
  padding: 0;
  cursor: pointer;
  transition: all ease-in-out 200ms;
  border-radius: 8px;
  overflow: hidden;
  outline-color: transparent;
  will-change: transform;

  &:where(:has([data-tinylight-active-item])) {
    margin: 0 10px;
    outline: 1px solid white;
    outline-offset: 2px;
    transform: scale(1.05);
  }

  & > * {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
}

[data-tinylight-close-button],
[data-tinylight-nav-button] {
  color: #fff;
  cursor: pointer;
}

[data-tinylight-prev-button] {
  left: 0px;
}

[data-tinylight-next-button] {
  right: 0px;
}

@property --overlay-blur {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --overlay-brightness {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

@keyframes fui-blur-in {
  from {
    --overlay-blur: 0px;
    --overlay-brightness: 1;
  }
  to {
    --overlay-blur: 3px;
    --overlay-brightness: 0.7;
  }
}

@keyframes fui-blur-out {
  from {
    --overlay-blur: 3px;
    --overlay-brightness: 0.7;
  }
  to {
    --overlay-blur: 0px;
    --overlay-brightness: 1;
  }
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes fui-dialog-content-show {
    from {
      opacity: 0;
      filter: blur(10px);
    }
    to {
      opacity: 1;
      filter: blur(0px);
    }
  }

  @keyframes fui-dialog-content-hide {
    from {
      opacity: 1;
      filter: blur(0px);
    }
    to {
      opacity: 0;
      filter: blur(10px);
    }
  }

  [data-tinylight-overlay] {
    &::after {
      backdrop-filter: blur(var(--overlay-blur))
        brightness(var(--overlay-brightness));
    }
    /* Keep the overlay mounted until the children have animated */
    &:where([data-state="closed"]) {
      animation: fui-blur-out 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    &:where([data-state="open"])::after {
      animation: fui-blur-in 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
    &:where([data-state="closed"])::after {
      animation: fui-blur-out 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
  }

  [data-tinylight-content] {
    &:where([data-state="open"]) {
      animation: fui-dialog-content-show 400ms ease-in-out;
    }
    &:where([data-state="closed"]) {
      animation: fui-dialog-content-hide 400ms ease-in-out;
    }
  }
}
